(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{365:function(t,e,n){"use strict";n.r(e);var a=n(42),o=Object(a.a)({},(function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"使用-cli"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#使用-cli"}},[t._v("#")]),t._v(" 使用 CLI")]),t._v(" "),n("p",[t._v("如果只想将本工具手工使用，或者用来和其他语言集成，那么 CLI 是一个非常好的选择。CLI 具备 JS API 完全的功能，可以互相替代。")]),t._v(" "),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[t._v("doc4type -i main.ts -t mytype\n")])])]),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v('Options:\n  -p, -i, --input, --path  The path of input file            [string] [required]\n  -t, --typeName           The type name that to be doc      [string] [required]\n  -o, --output             The path of output file. If not provided, use\n                           inputdir and typename as output path         [string]\n  -r, --root               The root of files                            [string]\n  -f, --format             The doc format, one of:          [markdown,json,html]\n                                                  [string] [default: "markdown"]\n      --title              The title (first h1 element) of output document\n                                                                        [string]\n      --help               Show help                                   [boolean]\n      --version            Show version number                         [boolean]\n')])])])])}),[],!1,null,null,null);e.default=o.exports}}]);